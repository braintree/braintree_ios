name: Tests
on: [pull_request]
concurrency:
  group: tests-${{ github.event.number }}
  cancel-in-progress: true
jobs:
  unit_test_job:
    name: Unit
    runs-on: macos-15-xlarge
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Use Xcode 16.4
        run: sudo xcode-select -switch /Applications/Xcode_16.4.0.app
      - name: Install Package dependencies
        run: swift package resolve
      - name: Install CocoaPod dependencies
        run: pod install
      - name: Run Unit Tests
        run: set -o pipefail && xcodebuild -workspace 'Braintree.xcworkspace' -sdk 'iphonesimulator' -configuration 'Debug' -scheme 'UnitTests' -destination 'name=iPhone 16 Pro,OS=18.5,platform=iOS Simulator'  test | ./Pods/xcbeautify/xcbeautify
  ui_test_job:
    name: UI
    runs-on: macos-15-xlarge
    timeout-minutes: 20  # Add overall job timeout
    strategy:
      matrix:
        test-suite:
          - ThreeDSecure_V2_UITests
          - PayPal_Checkout_UITests
          - PayPal_Vault_UITests
          - Venmo_UITests
      fail-fast: false  # Continue running other test suites if one fails
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Use Xcode 16.4
        run: sudo xcode-select -switch /Applications/Xcode_16.4.0.app

      - name: Install CocoaPod dependencies
        run: pod install

      - name: Clean Simulator State
        timeout-minutes: 3
        run: |
          # Reset simulator state to ensure clean environment
          echo "Finding iPhone 16 simulator..."
          DEVICE_UDID=$(xcrun simctl list devices available | grep "iPhone 16 (" | head -n 1 | grep -oE '\([A-Z0-9-]+\)' | tr -d '()')

          if [ -z "$DEVICE_UDID" ]; then
            echo "::error::iPhone 16 simulator not found"
            exit 1
          fi

          echo "Using simulator: $DEVICE_UDID"

          # Shutdown only the target simulator (not all)
          xcrun simctl shutdown "$DEVICE_UDID" 2>/dev/null || true

          # Erase only the target simulator
          echo "Erasing simulator data..."
          xcrun simctl erase "$DEVICE_UDID"

          # Disable hardware keyboard to avoid input issues
          defaults write com.apple.iphonesimulator ConnectHardwareKeyboard -bool false

          # Boot simulator
          echo "Booting simulator..."
          xcrun simctl boot "$DEVICE_UDID"

          # Wait for boot and data migration to complete
          echo "Waiting for simulator to boot and complete data migration..."
          xcrun simctl bootstatus "$DEVICE_UDID" -b 2>&1 || true

          # Give extra time for data migration and services to stabilize
          echo "Waiting for simulator services to stabilize..."
          sleep 10

      - name: Run UI Tests - ${{ matrix.test-suite }}
        id: test_attempt_1
        continue-on-error: true
        run: |
          set -o pipefail
          xcodebuild \
            -workspace 'Braintree.xcworkspace' \
            -sdk 'iphonesimulator' \
            -configuration 'Release' \
            -scheme 'UITests' \
            -destination 'name=iPhone 16 Pro,OS=18.5,platform=iOS Simulator' \
            -only-testing:UITests/${{ matrix.test-suite }} \
            -maximum-concurrent-test-simulator-destinations 1 \
            -disable-concurrent-testing \
            test | ./Pods/xcbeautify/xcbeautify

      - name: Retry UI Tests (if failed) - ${{ matrix.test-suite }}
        if: steps.test_attempt_1.outcome == 'failure'
        id: test_attempt_2
        continue-on-error: true
        timeout-minutes: 15
        run: |
          echo "First attempt failed, retrying..."
          # Clean simulator state before retry
          DEVICE_UDID=$(xcrun simctl list devices available | grep "iPhone 16 (" | head -n 1 | grep -oE '\([A-Z0-9-]+\)' | tr -d '()')

          if [ -n "$DEVICE_UDID" ]; then
            echo "Resetting simulator: $DEVICE_UDID"
            xcrun simctl shutdown "$DEVICE_UDID" 2>/dev/null || true
            xcrun simctl erase "$DEVICE_UDID"
            defaults write com.apple.iphonesimulator ConnectHardwareKeyboard -bool false
            xcrun simctl boot "$DEVICE_UDID"
            xcrun simctl bootstatus "$DEVICE_UDID" -b 2>&1 || true
            echo "Waiting for simulator services to stabilize..."
            sleep 10
          fi

          set -o pipefail
          xcodebuild \
            -workspace 'Braintree.xcworkspace' \
            -sdk 'iphonesimulator' \
            -configuration 'Release' \
            -scheme 'UITests' \
            -destination 'name=iPhone 16 Pro,OS=18.5,platform=iOS Simulator' \
            -only-testing:UITests/${{ matrix.test-suite }} \
            -maximum-concurrent-test-simulator-destinations 1 \
            -disable-concurrent-testing \
            test | ./Pods/xcbeautify/xcbeautify

      - name: Final UI Test Result - ${{ matrix.test-suite }}
        if: steps.test_attempt_1.outcome == 'failure'
        run: |
          if [ "${{ steps.test_attempt_2.outcome }}" == "failure" ]; then
            echo "UI Tests failed after retry"
            exit 1
          else
            echo "UI Tests passed on retry"
          fi

  integration_test_job:
    name: Integration
    runs-on: macos-15-xlarge
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Use Xcode 16.4
        run: sudo xcode-select -switch /Applications/Xcode_16.4.0.app
      - name: Install Package dependencies
        run: swift package resolve
      - name: Install CocoaPod dependencies
        run: pod install
      - name: Run Integration Tests
        run: set -o pipefail && xcodebuild -workspace 'Braintree.xcworkspace' -sdk 'iphonesimulator' -configuration 'Release' -scheme 'IntegrationTests' -destination 'name=iPhone 16 Pro,OS=18.5,platform=iOS Simulator'  test | ./Pods/xcbeautify/xcbeautify
